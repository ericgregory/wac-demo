// Generated by `wit-bindgen` 0.24.0. DO NOT EDIT!
package greeter

// #include "greeter.h"
// #include <stdlib.h>
import "C"
import "unsafe"

// Import functions from greeter
func GreeterNext() string {
	var ret C.greeter_string_t
	C.greeter_next(&ret)
	var lift_ret string
	lift_ret = C.GoStringN((*C.char)(unsafe.Pointer(ret.ptr)), C.int(ret.len))
	return lift_ret
}

// Export functions from greeter
var greeter Greeter = nil

// `SetGreeter` sets the `Greeter` interface implementation.
// This function will need to be called by the init() function from the guest application.
// It is expected to pass a guest implementation of the `Greeter` interface.
func SetGreeter(i Greeter) {
	greeter = i
}

type Greeter interface {
	Greet() string
}

//export greeter_greet
func greeterGreet(ret *C.greeter_string_t) {
	result := greeter.Greet()
	var lower_result C.greeter_string_t

	// use unsafe.Pointer to avoid copy
	lower_result.ptr = (*uint8)(unsafe.Pointer(C.CString(result)))
	lower_result.len = C.size_t(len(result))
	*ret = lower_result

}
